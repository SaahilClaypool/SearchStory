@inherits ReactiveComponent

<div class="flex flex-col">
    <input class="form-control form-control-sm" type="text" @bind="Folder" placeholder="Folder to add" />
    <button class="bg-blue-200 rounded border p-2 text-l bold" @onclick="Execute">Submit Folder</button>
    @if (ShowProgress)
    {
        <div class="relative pt-1 w-full">
            <div class="overflow-hidden h-5 mb-4 flex rounded bg-blue-200">
                <div style=@($"width:{(int)(Progress * 100)}%")
                    class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-pink-500">
                    @((int)(Progress * 100))%
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Inject] IndexDirectoryUseCase IndexDirectory { get; set; } = null!;

    string Folder { get; set; } = "";

    float Progress { get; set; }
    bool ShowProgress { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Key = "LoggedIn";
    }

    async Task Execute(EventArgs __ev)
    {
        if (!State.Value.LoggedIn)
        {
            State.Update(() => State.Value.ErrorMessage = "Unauthorized");
            return;
        }
        ShowProgress = true;
        try
        {
            await foreach (var progress in IndexDirectory.Execute(new(Folder)))
            {
                Progress = progress;
                StateHasChanged();
            }
        }
        catch (Exception e)
        {
            State.Update(() => State.Value.ErrorMessage = e.Message);
        }
        finally
        {
            ShowProgress = false;
        }
    }
}
